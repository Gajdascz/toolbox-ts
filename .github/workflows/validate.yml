name: Validate

on:
  workflow_call:
    inputs:
      changeset:
        type: boolean
        description: 'Whether to check for changesets'
        required: false
        default: false
      commitlint_mode:
        type: string
        description: 'Mode for commitlint (last|none|pr)'
        required: false
        default: 'none'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Environment
        uses: ./.github/actions/setup-env

      - name: 🔍 Types
        run: pnpm check:types
        shell: bash

      - name: 🕵️ Dependencies
        run: |
          pnpm depcruiser ./packages --log-type "gh-actions-annotations" --no-graph --no-report
        shell: bash

      - name: 🧹 Formatting
        run: pnpm check:format
        shell: bash

      - name: 🧹 Linting
        run: pnpm check:lint
        shell: bash

      - name: 🧪 Tests
        run: pnpm test
        shell: bash

      - name: 🦋 Check for changeset
        if: ${{ inputs.changeset }}
        run: |
          if ! pnpm changeset status --since=origin/main; then
            echo "::error::No changeset found. Please add a changeset using 'pnpm changeset' if this PR includes user-facing changes."
            exit 1
          fi
        shell: bash

      - name: 📝 Validate Commit Messages
        if: ${{ inputs.commitlint_mode != 'none' }}
        run: |
          if [ "${{ inputs.commitlint_mode }}" = "last" ]; then
            echo "Validating last commit..."
            pnpm commitlint --last --verbose
          elif [ "${{ inputs.commitlint_mode }}" = "pr" ] && [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Validating all PR commits..."
            pnpm commitlint --from ${{ github.event.pull_request.base.sha }} \
                            --to ${{ github.event.pull_request.head.sha }} \
                            --verbose
          else
            echo "Skipping commitlint (mode=${{ inputs.commitlint_mode }}, event=${{ github.event_name }})"
          fi
        shell: bash
